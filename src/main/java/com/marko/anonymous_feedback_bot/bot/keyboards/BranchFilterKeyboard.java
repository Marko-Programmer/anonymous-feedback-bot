package com.marko.anonymous_feedback_bot.bot.keyboards;

import com.marko.anonymous_feedback_bot.model.UserFilters;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class BranchFilterKeyboard {

    public static ReplyKeyboardMarkup getKeyboard(UserFilters filters) {
        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        keyboardMarkup.setSelective(true);
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(true);

        List<KeyboardRow> keyboard = new ArrayList<>();

        // üîπ –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞–±—ñ–ª—å–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ —Ñ—ñ–ª—ñ–π
        List<String> branches = filters.branchFilters.keySet()
                .stream()
                .sorted()
                .collect(Collectors.toList());

        KeyboardRow currentRow = new KeyboardRow();

        for (int i = 0; i < branches.size(); i++) {
            String branch = branches.get(i);
            boolean active = filters.branchFilters.get(branch);
            currentRow.add(active ? branch + " ‚úÖ" : branch);

            // –∫–æ–∂–Ω—ñ 3 –∫–Ω–æ–ø–∫–∏ ‚Äî –Ω–æ–≤–∏–π —Ä—è–¥
            if ((i + 1) % 3 == 0) {
                keyboard.add(currentRow);
                currentRow = new KeyboardRow();
            }
        }

        // –¥–æ–¥–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ä—è–¥, —è–∫—â–æ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π
        if (!currentRow.isEmpty()) {
            keyboard.add(currentRow);
        }

        // üîπ —Ä—è–¥ –∑ "–ù–∞–∑–∞–¥"
        KeyboardRow backRow = new KeyboardRow();
        backRow.add("‚¨ÖÔ∏è –ù–∞–∑–∞–¥");
        keyboard.add(backRow);

        keyboardMarkup.setKeyboard(keyboard);
        return keyboardMarkup;
    }
}
